package justext

import (
	"bytes"
	"compress/gzip"
	"io"
)

func DefaultTemplate() ([]byte, error) {
	var gz *gzip.Reader
	var err error
	if gz, err = gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x74, 0x90,
		0x3b, 0x6e, 0xc4, 0x20, 0x10, 0x86, 0x6b, 0xfb, 0x14, 0xc8, 0x4a, 0x8d,
		0x2f, 0x80, 0x29, 0x92, 0x22, 0x49, 0x13, 0x45, 0x8a, 0x2f, 0x30, 0x36,
		0xc4, 0x20, 0x61, 0x40, 0x40, 0x91, 0x08, 0x71, 0xf7, 0xe5, 0x21, 0xef,
		0x4b, 0xbb, 0x15, 0xe8, 0x9f, 0x8f, 0xf9, 0x86, 0x21, 0x22, 0xec, 0x8a,
		0xf6, 0x64, 0x31, 0xec, 0x9f, 0xf6, 0x31, 0xbe, 0x68, 0xf3, 0x6a, 0xa4,
		0xe2, 0xce, 0x2a, 0x08, 0x1c, 0x4d, 0x08, 0x7f, 0x5d, 0x07, 0x29, 0x65,
		0xc6, 0x81, 0xde, 0x38, 0xc2, 0xdf, 0xe0, 0x60, 0x73, 0x60, 0x85, 0xcf,
		0x69, 0x17, 0xa3, 0xfc, 0x45, 0x9f, 0xfe, 0xdd, 0x18, 0x86, 0xf0, 0x9b,
		0x02, 0x5f, 0xd3, 0x16, 0xe3, 0x0f, 0x0e, 0x4c, 0xea, 0xad, 0x26, 0x1d,
		0x11, 0x34, 0xc6, 0xd9, 0xc9, 0xfd, 0xc7, 0xc2, 0x9a, 0xfb, 0xcc, 0xfc,
		0x2f, 0xa4, 0x44, 0x46, 0x41, 0x2b, 0xcf, 0x95, 0x2f, 0x9a, 0x02, 0xda,
		0xc7, 0xa0, 0xa5, 0xb9, 0xd8, 0x58, 0xcd, 0x9a, 0xfb, 0xfc, 0xa8, 0xfa,
		0xb4, 0x09, 0xe8, 0xf6, 0x23, 0x47, 0x43, 0xb4, 0x96, 0xc9, 0xa6, 0x61,
		0xb9, 0x94, 0x86, 0x67, 0x92, 0x3b, 0x43, 0xbd, 0x1c, 0x27, 0x19, 0xdb,
		0xc2, 0xf2, 0xd4, 0x65, 0x7f, 0xa7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0,
		0x89, 0xb8, 0x7c, 0x46, 0x01, 0x00, 0x00,
	})); err != nil {
		return nil, err
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()
	return b.Bytes(), nil
}
